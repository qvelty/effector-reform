"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[539],{8628:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>s,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>c,toc:()=>o});var i=n(4848),t=n(8453);const d={id:"create-field",sidebar_position:2,title:"createField",tags:["Core","Primitive field"]},l=void 0,c={id:"api/core/create-field",title:"createField",description:"Creates field, which contains primitive value (like string, number, boolean, Date, bigint, Blob, ArrayBuffer, File, FileList, null)",source:"@site/docs/api/core/create-field.md",sourceDirName:"api/core",slug:"/api/core/create-field",permalink:"/effector-reform/docs/api/core/create-field",draft:!1,unlisted:!1,editUrl:"https://github.com/qvelty/effector-reform/tree/main/docs/docs/api/core/create-field.md",tags:[{label:"Core",permalink:"/effector-reform/docs/tags/core"},{label:"Primitive field",permalink:"/effector-reform/docs/tags/primitive-field"}],version:"current",sidebarPosition:2,frontMatter:{id:"create-field",sidebar_position:2,title:"createField",tags:["Core","Primitive field"]},sidebar:"apiSidebar",next:{title:"createArrayField",permalink:"/effector-reform/docs/api/core/create-array-field"}},s={},o=[{value:"Formulae",id:"formulae",level:3},{value:"Examples",id:"examples",level:3},{value:"API reference",id:"api-reference",level:3}];function a(e){const r={code:"code",em:"em",h3:"h3",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(r.p,{children:["Creates field, which contains primitive value (like ",(0,i.jsx)(r.code,{children:"string"}),", ",(0,i.jsx)(r.code,{children:"number"}),", ",(0,i.jsx)(r.code,{children:"boolean"}),", ",(0,i.jsx)(r.code,{children:"Date"}),", ",(0,i.jsx)(r.code,{children:"bigint"}),", ",(0,i.jsx)(r.code,{children:"Blob"}),", ",(0,i.jsx)(r.code,{children:"ArrayBuffer"}),", ",(0,i.jsx)(r.code,{children:"File"}),", ",(0,i.jsx)(r.code,{children:"FileList"}),", ",(0,i.jsx)(r.code,{children:"null"}),")"]}),"\n",(0,i.jsx)(r.h3,{id:"formulae",children:"Formulae"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:"interface CreatePrimitiveFieldOptions<Meta extends object = any> {\n  error?: FieldError;\n  meta?: Meta;\n  clearOuterErrorOnChange?: boolean;\n  forkOnCreateForm?: boolean;\n}\n\nfunction createField<\n  T extends PrimitiveValue,\n  Meta extends object = any,\n>(\n  defaultValue: T,\n  overrides?: CreatePrimitiveFieldOptions<Meta>,\n): PrimitiveField<T, Meta>\n"})}),"\n",(0,i.jsx)(r.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:"import { createField } from \"@effector-reform/core\";\nimport { sample, createEffect } from \"effector\";\n\nconst numberField = createField(0);\nconst stringField = createField('');\nconst typedStringField = createField<'inner' | 'outer'>('inner');\n\nconst logFx = createEffect(console.log);\n\nsample({\n  clock: [numberField.changed, stringField.changed],\n  target: logFx,\n});\n\nnumberField.change(10); // logFx -> 10\nstringField.change('test'); // logFx -> 'test'\n"})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.em,{children:"base primitive field example"})}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:'import { createField } from "@effector-reform/core";\nimport { createEvent, sample } from "effector";\n\nconst field = createField<number, { onlyPositive: boolean }>(0, {\n  meta: { onlyPositive: false }\n});\n\nconst ruleToggled = createEvent();\n\nsample({\n  clock: ruleToggled,\n  source: field.$meta,\n  fn: (meta) => { onlyPositive: !meta.onlyPositive },\n  target: field.changeMeta,\n});\n\nfield.$meta.getState(); // { onlyPositive: false } \n\nruleToggled();\n\nfield.$meta.getState(); // { onlyPositive: true } \n'})}),"\n",(0,i.jsx)(r.p,{children:(0,i.jsx)(r.em,{children:"primitive field meta example"})}),"\n",(0,i.jsx)(r.h3,{id:"api-reference",children:"API reference"}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"name"}),(0,i.jsx)(r.th,{children:"type"}),(0,i.jsx)(r.th,{children:"description"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"$value"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"Store<T>"})}),(0,i.jsx)(r.td,{children:"value of field"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"$meta"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"Store<Meta>"})}),(0,i.jsx)(r.td,{children:"field meta"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"$error"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"Store<FieldError>"})}),(0,i.jsx)(r.td,{children:"error of field"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"$isDirty"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"Store<boolean>"})}),(0,i.jsx)(r.td,{children:"is field changed after creating"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"$isValid"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"Store<boolean>"})}),(0,i.jsx)(r.td,{children:"is field valid"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"$isFocused"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"Store<boolean>"})}),(0,i.jsx)(r.td,{children:"is user focused on field"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"blurred"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"Event<void>"})}),(0,i.jsx)(r.td,{children:"triggered when user blurred input (you must set focus/blur handlers in input)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"focused"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"Event<void>"})}),(0,i.jsx)(r.td,{children:"triggered when user focused input (you must set focus/blur handlers in input)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"fork"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"(options?: CreatePrimaryFieldOptions) => PrimaryField<T>"})}),(0,i.jsx)(r.td,{children:"fork field (create field independent copy)"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"change"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"EventCallable<T>"})}),(0,i.jsx)(r.td,{children:"change field value"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"changed"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"Event<T>"})}),(0,i.jsx)(r.td,{children:"triggered when field value changed"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"reset"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"EventCallable<void>"})}),(0,i.jsx)(r.td,{children:"reset field value"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"changeError"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"EventCallable<FieldError>"})}),(0,i.jsx)(r.td,{children:"change outer field error"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"changeMeta"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"EventCallable<Meta>"})}),(0,i.jsx)(r.td,{children:"change field meta"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"metaChanged"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"Event<Meta>"})}),(0,i.jsx)(r.td,{children:"field meta changed"})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:"errorChanged"}),(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"Event<FieldError>"})}),(0,i.jsx)(r.td,{children:"triggered when error changed (inner or outer)"})]})]})]})]})}function h(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>c});var i=n(6540);const t={},d=i.createContext(t);function l(e){const r=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(d.Provider,{value:r},e.children)}}}]);
"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[230],{5214:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>x,contentTitle:()=>f,default:()=>h,frontMatter:()=>c,metadata:()=>p,toc:()=>u});var t=o(4848),a=o(8453),n=o(9084),i=o(5053),s=o(7143),m=o(4476);const l=(0,n.DG)({schema:{a:""},validation:(0,s.Z)(m.z.object({a:m.z.string().min(5,"min 5")}))}),d=()=>{const{fields:e}=(0,i.mN)(l);return(0,t.jsx)(t.Fragment,{children:(0,t.jsxs)("form",{children:[(0,t.jsx)("input",{value:e.a.value,onChange:r=>e.a.onChange(r.currentTarget.value)}),(0,t.jsxs)("p",{children:["error: ",e.a.error]})]})})},c={sidebar_position:9,title:"Form with zod validation example",id:"zod-form",tags:["Learn","Getting started","Form with zod validation","Example","Examples"]},f=void 0,p={id:"learn/examples/zod-form",title:"Form with zod validation example",description:"",source:"@site/docs/learn/examples/zod-form.mdx",sourceDirName:"learn/examples",slug:"/learn/examples/zod-form",permalink:"/effector-reform/docs/learn/examples/zod-form",draft:!1,unlisted:!1,editUrl:"https://github.com/qvelty/effector-reform/tree/main/docs/docs/learn/examples/zod-form.mdx",tags:[{label:"Learn",permalink:"/effector-reform/docs/tags/learn"},{label:"Getting started",permalink:"/effector-reform/docs/tags/getting-started"},{label:"Form with zod validation",permalink:"/effector-reform/docs/tags/form-with-zod-validation"},{label:"Example",permalink:"/effector-reform/docs/tags/example"},{label:"Examples",permalink:"/effector-reform/docs/tags/examples"}],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9,title:"Form with zod validation example",id:"zod-form",tags:["Learn","Getting started","Form with zod validation","Example","Examples"]},sidebar:"learnSidebar",previous:{title:"Form with yup validation example",permalink:"/effector-reform/docs/learn/examples/yup-form"}},x={},u=[];function g(e){const r={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(d,{}),"\n",(0,t.jsx)("br",{}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-tsx",children:"import { createForm } from '@effector-reform/core';\nimport { useForm } from '@effector-reform/react';\nimport { zodAdapter } from '@effector-reform/zod';\nimport { z } from 'zod';\n\nconst form = createForm({\n  schema: { a: '' },\n  validation: zodAdapter(\n    z.object({\n      a: z.string().min(5, 'min 5'),\n    }),\n  ),\n});\n\nexport const FormWithZod = () => {\n  const { fields } = useForm(form);\n\n  return (\n    <>\n      <form>\n        <input\n          value={fields.a.value}\n          onChange={(e) => fields.a.onChange(e.currentTarget.value)}\n        />\n\n        <p>error: {fields.a.error}</p>\n      </form>\n    </>\n  );\n};\n"})})]})}function h(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(g,{...e})}):g(e)}}}]);